// (A) 2:1 Multiplexer (Conditional Operator)
module mux2_1 (
    input  in1, in2,    // Data inputs
    input  select,      // Selection input
    output out          // Output
);

    // Conditional assignment
    assign out = select ? in2 : in1;

endmodule

// (B) 2:1 Multiplexer (Gate-Level)
module mux2_1_gate (
    input  in1, in2,    // Data inputs
    input  select,      // Selection input
    output out          // Output
);

    // Gate-level implementation
    assign out = (in1 & (~select)) | (in2 & select);

endmodule

// Testbench for 2:1 MUX
`timescale 1ns/1ps

module mux2_1_tb;
    reg in1, in2, select;
    wire out;
    
    // Instantiate MUX
    mux2_1 uut (.in1(in1), .in2(in2), .select(select), .out(out));
    
    initial begin
        // Test all combinations
        in1 = 0; in2 = 0; select = 0; #10;
        in1 = 0; in2 = 1; select = 0; #10;
        in1 = 1; in2 = 0; select = 0; #10;
        in1 = 1; in2 = 1; select = 0; #10;
        in1 = 0; in2 = 0; select = 1; #10;
        in1 = 0; in2 = 1; select = 1; #10;
        in1 = 1; in2 = 0; select = 1; #10;
        in1 = 1; in2 = 1; select = 1; #10;
        $finish;
    end
    
    initial begin
        $monitor("Time=%0t: in1=%b in2=%b sel=%b | out=%b",
                $time, in1, in2, select, out);
    end
endmodule









// (A) 4:1 Multiplexer (Dataflow)
module mux4x1 (
    input  s0, s1,      // Selection inputs
    input  a, b, c, d,  // Data inputs
    output y            // Output
);

    // Dataflow implementation
    assign y = (a & (~s1) & (~s0)) |
               (b & (~s1) &   s0 ) |
               (c &   s1  & (~s0)) |
               (d &   s1  &   s0 );

endmodule


//(A) Testbench for 4:1 MUX
`timescale 1ns/1ps

module mux4x1_tb;
    reg a, b, c, d, s0, s1;
    wire y;
    
    // Instantiate MUX
    mux4x1 uut (.s0(s0), .s1(s1), .a(a), .b(b), .c(c), .d(d), .y(y));
    
    initial begin
        // Test all combinations
        a=1; b=0; c=0; d=0; s1=0; s0=0; #10; // Select a
        a=0; b=1; c=0; d=0; s1=0; s0=1; #10; // Select b
        a=0; b=0; c=1; d=0; s1=1; s0=0; #10; // Select c
        a=0; b=0; c=0; d=1; s1=1; s0=1; #10; // Select d
        
        // Additional test cases
        a=1; b=1; c=1; d=1; s1=0; s0=0; #10;
        a=0; b=1; c=0; d=1; s1=1; s0=0; #10;
        $finish;
    end
    
    initial begin
        $monitor("Time=%0t: s1=%b s0=%b | a=%b b=%b c=%b d=%b | y=%b",
                $time, s1, s0, a, b, c, d, y);
    end
endmodule